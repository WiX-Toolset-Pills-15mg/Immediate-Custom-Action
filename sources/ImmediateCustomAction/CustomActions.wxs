<?xml version="1.0" encoding="UTF-8"?>

<!--
WiX Toolset Pills 15mg
Copyright (C) 2019-2021 Dust in the Wind

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<!--
====================================================================================================
Step 4: Reference the custom action library
====================================================================================================

A reference to the library file (*.CA.dll file) that contains the custom actions must be added:
    - right click on the project -> Add -> Reference... -> Projects -> <the project name> -> Add -> OK

A custom actions project for WiX created in C# will generate two files:
    - "<name>.dll" - a normal .NET class library assembly.
    - "<name>.CA.dll" - a wrapper over the previously created .NET assembly that can be consumed by Windows Installer.
This trick is needed because, natively, Windows Installer cannot consume .NET assemblies.

NEXT: CustomActions.wxs
-->

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
    <Fragment>

        <!--
        ====================================================================================================
        Step 5: Add the <Binary> tag
        ====================================================================================================
        
        The <binary> tag provides an alias for the dll that contains the implementation of the custom
        action.
        
        By adding the custom action's project as a reference, WiX Toolset is automatically creating a number
        of useful variables like:
        
            - var.ImmediateCustomAction.CustomActions.TargetDir
                - contains the path to the custom action's dll. (That bin\Debug or bin\Release where the
                  project is built.)
                
            - var.ImmediateCustomAction.CustomActions.TargetName
                - contains the name of the custom action's assembly. This is the name of the file without
                  extension.
        
        NEXT: CustomActions.wxs
        -->

        <Binary
            Id="CustomActionsBinary"
            SourceFile="$(var.ImmediateCustomAction.CustomActions.TargetDir)$(var.ImmediateCustomAction.CustomActions.TargetName).CA.dll" />

        <!--
        ====================================================================================================
        Step 6: Create the custom action.
        ====================================================================================================
        
        The custom action refers the static method previously implemented in C# by specifying the binary
        library (BinaryKey) and the name of the custom action (DllEntry).
        
        Go To: Product.wxs
        -->
        <CustomAction
            Id="LogSomething"
            BinaryKey="CustomActionsBinary"
            DllEntry="LogSomething"
            Return="check"
            Execute="immediate" />

    </Fragment>
</Wix>